From rostedt@goodmis.org Sat Jun  2 00:35:54 2007
Return-Path: <rostedt@goodmis.org>
X-Spam-Checker-Version: SpamAssassin 3.1.7-deb (2006-10-05) on debian
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=ham 
	version=3.1.7-deb
Received: from ms-smtp-01.nyroc.rr.com (ms-smtp-01.nyroc.rr.com
	[24.24.2.55]) by mail.tglx.de (Postfix) with ESMTP id C420E65C065 for
	<tglx@linutronix.de>; Sat,  2 Jun 2007 00:35:54 +0200 (CEST)
Received: from [192.168.23.10] (cpe-24-94-51-176.stny.res.rr.com
	[24.94.51.176]) by ms-smtp-01.nyroc.rr.com (8.13.6/8.13.6) with ESMTP id
	l51MZLun018065; Fri, 1 Jun 2007 18:35:24 -0400 (EDT)
Subject: [PATCH RT] add might_sleep in rt_spin_lock_fastlock
From: Steven Rostedt <rostedt@goodmis.org>
To: Ingo Molnar <mingo@elte.hu>
Cc: Thomas Gleixner <tglx@linutronix.de>, Arnaldo Carvalho de Melo <acme@ghostprotocols.net>, LKML <linux-kernel@vger.kernel.org>
Content-Type: multipart/mixed; boundary="=-jgTmng/RcFNHiVaU9w/Z"
Date: Fri, 01 Jun 2007 18:35:21 -0400
Message-Id: <1180737321.21781.46.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.3 
X-Virus-Scanned: Symantec AntiVirus Scan Engine
X-Evolution-Source: imap://tglx%40linutronix.de@localhost:8993/


--=-jgTmng/RcFNHiVaU9w/Z
Content-Type: text/plain
Content-Transfer-Encoding: 8bit

Ingo,

Every so often we get bit by a bug "scheduling in atomic", and it comes
from a rtmutex spin_lock.  The bug only happens when that lock has
contention, so we miss it a lot.

This patch adds a might_sleep() to the rt_spin_lock_fastlock to find
bugs where we can schedule in atomic.

The one place that exists now is from do_page_fault and sending a
signal.  I wrote a simple crash program that segfaults (attached) and
with this patch, I get the warning.

-- Steve

Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

---
 kernel/rtmutex.c |    2 ++
 1 file changed, 2 insertions(+)

Index: linux-2.6.23.1-rt5/kernel/rtmutex.c
===================================================================
--- linux-2.6.23.1-rt5.orig/kernel/rtmutex.c
+++ linux-2.6.23.1-rt5/kernel/rtmutex.c
@@ -631,6 +631,8 @@ static inline void
 rt_spin_lock_fastlock(struct rt_mutex *lock,
 		void fastcall (*slowfn)(struct rt_mutex *lock))
 {
+	might_sleep();
+
 	if (likely(rt_mutex_cmpxchg(lock, NULL, current)))
 		rt_mutex_deadlock_account_lock(lock, current);
 	else
