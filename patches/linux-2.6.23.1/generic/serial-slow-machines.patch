---
 drivers/char/tty_io.c |    4 ++++
 drivers/serial/8250.c |   11 ++++++++++-
 2 files changed, 14 insertions(+), 1 deletion(-)

Index: linux-2.6.23.1-rt5/drivers/char/tty_io.c
===================================================================
--- linux-2.6.23.1-rt5.orig/drivers/char/tty_io.c
+++ linux-2.6.23.1-rt5/drivers/char/tty_io.c
@@ -3690,10 +3690,14 @@ void tty_flip_buffer_push(struct tty_str
 		tty->buf.tail->commit = tty->buf.tail->used;
 	spin_unlock_irqrestore(&tty->buf.lock, flags);
 
+#ifndef CONFIG_PREEMPT_RT
 	if (tty->low_latency)
 		flush_to_ldisc(&tty->buf.work.work);
 	else
 		schedule_delayed_work(&tty->buf.work, 1);
+#else
+	flush_to_ldisc(&tty->buf.work.work);
+#endif
 }
 
 EXPORT_SYMBOL(tty_flip_buffer_push);
Index: linux-2.6.23.1-rt5/drivers/serial/8250.c
===================================================================
--- linux-2.6.23.1-rt5.orig/drivers/serial/8250.c
+++ linux-2.6.23.1-rt5/drivers/serial/8250.c
@@ -1455,7 +1455,10 @@ static irqreturn_t serial8250_interrupt(
 {
 	struct irq_info *i = dev_id;
 	struct list_head *l, *end = NULL;
-	int pass_counter = 0, handled = 0;
+#ifndef CONFIG_PREEMPT_RT
+	int pass_counter = 0;
+#endif
+	int handled = 0;
 
 	DEBUG_INTR("serial8250_interrupt(%d)...", irq);
 
@@ -1493,12 +1496,18 @@ static irqreturn_t serial8250_interrupt(
 
 		l = l->next;
 
+		/*
+		 * On preempt-rt we can be preempted and run in our
+		 * own thread.
+		 */
+#ifndef CONFIG_PREEMPT_RT
 		if (l == i->head && pass_counter++ > PASS_LIMIT) {
 			/* If we hit this, we're dead. */
 			printk(KERN_ERR "serial8250: too much work for "
 				"irq%d\n", irq);
 			break;
 		}
+#endif
 	} while (l != end);
 
 	spin_unlock(&i->lock);
