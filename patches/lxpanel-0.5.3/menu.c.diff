--- s/src/plugins/menu.c.orig	2009-07-17 19:36:37.000000000 +0700
+++ s/src/plugins/menu.c	2009-09-08 13:50:48.000000000 +0700
@@ -16,13 +16,24 @@
  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
 
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
 #include <stdlib.h>
 #include <string.h>
+#include <unistd.h>
+#include <errno.h>
 
 #include <gdk-pixbuf/gdk-pixbuf.h>
 #include <glib.h>
 #include <glib/gi18n.h>
 
+#ifdef USE_LIBSN
+#define SN_API_NOT_YET_FROZEN 1
+#include <libsn/sn.h>
+#endif
+
 #include <menu-cache.h>
 
 #include <sys/types.h>
@@ -63,6 +74,10 @@
     gpointer reload_notify;
 } menup;
 
+#ifdef USE_LIBSN
+SnDisplay  *sn_display = NULL;
+#endif
+
 static guint idle_loader = 0;
 
 GQuark SYS_MENU_ITEM_ID = 0;
@@ -100,6 +115,70 @@
     RET();
 }
 
+#ifdef USE_LIBSN
+
+static void 
+spawn_app_sn(GtkWidget *widget, gpointer data)
+{
+    SnLauncherContext *context;
+    GError *error = NULL;
+
+    char *name, *bin_name, *desc;
+
+    ENTER;
+
+    if (data) {
+	name = (char *) data;
+	bin_name = name;
+	desc = name;
+
+	if (!sn_display) {
+	    sn_display = sn_display_new (GDK_DISPLAY(), NULL, NULL);
+	}
+
+	context = sn_launcher_context_new (sn_display, DefaultScreen (GDK_DISPLAY()));
+  
+	if (name)     sn_launcher_context_set_name (context, name);
+	if (desc)     sn_launcher_context_set_description (context, desc);
+	if (bin_name) sn_launcher_context_set_binary_name (context, bin_name);
+  
+	sn_launcher_context_initiate (context, "lxpanel menu launch", bin_name, CurrentTime);
+
+	sn_launcher_context_setup_child_process (context);
+	if (! g_spawn_command_line_async(data, &error) ) {
+    	    ERR("can't spawn %s\nError is %s\n", (char *)data, error->message);
+    	    g_error_free (error);
+	}
+    }
+    RET();
+}
+
+static void sn_exec(gchar *name)
+{
+    SnLauncherContext *context;
+    GError *error = NULL;
+
+    char *bin_name, *desc;
+
+    bin_name = name;
+    desc = name;
+
+    if (!sn_display) {
+	sn_display = sn_display_new (GDK_DISPLAY(), NULL, NULL);
+    }
+
+    context = sn_launcher_context_new (sn_display, DefaultScreen (GDK_DISPLAY()));
+
+    if (name)     sn_launcher_context_set_name (context, name);
+    if (desc)     sn_launcher_context_set_description (context, desc);
+    if (bin_name) sn_launcher_context_set_binary_name (context, bin_name);
+
+    sn_launcher_context_initiate (context, "lxpanel launchbar", bin_name, CurrentTime);
+
+    sn_launcher_context_setup_child_process (context);
+}
+#endif
+
 static void
 spawn_app(GtkWidget *widget, gpointer data)
 {
@@ -159,6 +238,10 @@
 
 static void on_menu_item( GtkMenuItem* mi, MenuCacheItem* item )
 {
+#ifdef USE_LIBSN
+    if ( menu_cache_app_get_use_sn(MENU_CACHE_APP(item)) )
+	sn_exec(menu_cache_app_get_exec(MENU_CACHE_APP(item)));
+#endif
     lxpanel_launch_app( menu_cache_app_get_exec(MENU_CACHE_APP(item)),
             NULL, menu_cache_app_get_use_terminal(MENU_CACHE_APP(item)));
 }
@@ -628,14 +711,14 @@
 read_item(Plugin *p, char** fp)
 {
     line s;
-    gchar *name, *fname, *action;
+    gchar *name, *fname, *action, *action_sn;
     GtkWidget *item;
     menup *m = (menup *)p->priv;
     Command *cmd_entry = NULL;
 
     ENTER;
     s.len = 256;
-    name = fname = action = NULL;
+    name = fname = action = action_sn = NULL;
 
     if( fp )
     {
@@ -647,6 +730,8 @@
                     name = g_strdup(s.t[1]);
                 else if (!g_ascii_strcasecmp(s.t[0], "action"))
                     action = g_strdup(s.t[1]);
+        	else if (!g_ascii_strcasecmp(s.t[0], "actionsn"))
+            	    action_sn = g_strdup(s.t[1]);
                 else if (!g_ascii_strcasecmp(s.t[0], "command")) {
                     Command *tmp;
 
@@ -675,6 +760,13 @@
         if (action) {
             g_signal_connect(G_OBJECT(item), "activate", (GCallback)spawn_app, action);
         }
+        else if (action_sn) {
+#ifdef USE_LIBSN
+    	    g_signal_connect(G_OBJECT(item), "activate", (GCallback)spawn_app_sn, action_sn);
+#else
+            g_signal_connect(G_OBJECT(item), "activate", (GCallback)spawn_app, action_sn);
+#endif
+    	}
     }
     gtk_container_set_border_width(GTK_CONTAINER(item), 0);
     g_free(name);
@@ -692,6 +784,7 @@
     g_free(fname);
     g_free(name);
     g_free(action);
+    g_free(action_sn);
     RET(NULL);
 }
 
