#!/bin/sh

OS_NAME="pdaXrom"

DATAPATH=$1
TMPPATH=/tmp/update
TMPDATA=$TMPPATH/tmpdata.bin
TMPHEAD=$TMPPATH/tmphead.bin

WFLG_KERNEL=0
WFLG_INITRD=0
WFLG_MVERSION=0

RO_MTD_LINE=`cat /proc/mtd | grep "root" | tail -n 1`
if [ "$RO_MTD_LINE" = "" ]; then
    RO_MTD_LINE=`cat /proc/mtd | grep "\<NAND\>.*\<2\>" | tail -n 1`
fi
RO_MTD_NO=`echo $RO_MTD_LINE | cut -d: -f1 | cut -dd -f2`
RO_MTD_SIZE_HEX=`echo $RO_MTD_LINE | cut -d" " -f2`
RO_MTD=/dev/mtd$RO_MTD_NO
RO_MTDBLK=/dev/mtdblock$RO_MTD_NO
RO_MTD_SIZE=`dc 0x$RO_MTD_SIZE_HEX 1024 /`

RW_MTD_LINE=`cat /proc/mtd | grep "home" | tail -n 1`
if [ "$RW_MTD_LINE" = "" ]; then
    RW_MTD_LINE=`cat /proc/mtd | grep "\<NAND\>.*\<2\>" | tail -n 1`
fi
if [ "$RW_MTD_LINE" = "" ]; then
    RW_MTD_SIZE=0
else
    RW_MTD_NO=`echo $RW_MTD_LINE | cut -d: -f1 | cut -dd -f2`
    RW_MTD_SIZE_HEX=`echo $RW_MTD_LINE | cut -d" " -f2`
    RW_MTD=/dev/mtd$RW_MTD_NO
    RW_MTDBLK=/dev/mtdblock$RW_MTD_NO
    RW_MTD_SIZE=`dc 0x$RW_MTD_SIZE_HEX 1024 /`
fi

LOGOCAL_MTD=/dev/mtd1

VERBLOCK=0x48000
MVRBLOCK=0x70000

DIALOG=/tmp1/tools/bin/dialog
XPATCH=/tmp1/tools/patch

Cleanup(){
	rm -f $VTMPNAME > /dev/null 2>&1
	rm -f $MTMPNAME > /dev/null 2>&1
	rm $CTRLPATH/* > /dev/null 2>&1
	rm $DATAPATH/* > /dev/null 2>&1
	exit $1
}

writeflash()
{
	rm -f $TMPPATH/error
	PCT=0
	while [ $DATAPOS -lt $DATASIZE ]
	do
	    bcut -a $DATAPOS -s $ONESIZE -o $TMPDATA $TARGETFILE
	    TMPSIZE=`wc -c $TMPDATA`
	    TMPSIZE=`echo $TMPSIZE | cut -d' ' -f1`
	    DATAPOS=`expr $DATAPOS + $TMPSIZE`

	    if [ $ISLOGICAL = 0 ]
	    then
		next_addr=`/sbin/nandcp -a $ADDR $TMPDATA $TARGET_MTD  2>/dev/null | fgrep "mtd address" | cut -d- -f2 | cut -d\( -f1`
		if [ "$next_addr" = "" ]; then
		    rm $TMPDATA > /dev/null 2>&1
		    touch $TMPPATH/error
		    break
		fi
		ADDR=$next_addr
	    else
		/sbin/nandlogical $LOGOCAL_MTD WRITE $ADDR $DATASIZE $TMPDATA > /dev/null 2>&1
		ADDR=`expr $ADDR + $TMPSIZE`
	    fi

	    rm $TMPDATA > /dev/null 2>&1

	    PCT=`expr $PCT + $PROGSTEP`
	    echo "XXX"
	    echo `expr $PCT / 10`
	    echo "\\n$DATANAME flashing..."
	    echo "XXX"
	done
}

homeformat() {
	if [ $RW_MTD_SIZE -eq 0 ]; then
	    $DIALOG --title "$OS_NAME Installer" --clear \
    		--msgbox "\\nYou use one root configuration without user partition." 10 52
	
	    return
	fi
	$DIALOG --sleep 1 \
		--title "$OS_NAME Installer" \
    		--infobox "\\nUser flash erasing ..." 10 52
	/tmp1/tools/bin/eraseall -j $RW_MTD 2> /dev/null > /dev/null
	$DIALOG --sleep 1 \
		--title "$OS_NAME Installer" \
    		--infobox "\\nUser flash erasing ... done" 10 52
	mkdir -p /tmp1/root
	mkdir -p /tmp1/root/home
	$DIALOG --sleep 1 \
		--title "$OS_NAME Installer" \
    		--infobox "\\nMount root partition ..." 10 52
	mount -t jffs2 -o rw,noatime $RO_MTDBLK /tmp1/root
	$DIALOG --sleep 1 \
		--title "$OS_NAME Installer" \
    		--infobox "\\nMount user partition ..." 10 52
	mount -t jffs2 -o rw,noatime $RW_MTDBLK /tmp1/root/home
	$DIALOG --sleep 1 \
		--title "$OS_NAME Installer" \
    		--infobox "\\nInstalling system files ..." 10 52
	cd /tmp1/root
	tar --no-same-owner -xf /tmp1/root/root/.home_default.tar
	cd /tmp1/root/home/system
	tar --no-same-owner -xf /tmp1/root/root/.var_default.tar
	$DIALOG --sleep 1 \
		--title "$OS_NAME Installer" \
    		--infobox "\\nUser partition formatted..." 10 52
	cd /
	umount /tmp1/root/home
	umount /tmp1/root
}

homebackup() {
	if [ $RW_MTD_SIZE -eq 0 ]; then
	    $DIALOG --title "$OS_NAME Installer" --clear \
    		--msgbox "\\nYou use one root configuration without user partition." 10 52
	
	    return
	fi
        cd $DATAPATH
        ###tempfile=`tempfile 2>/dev/null` || 
	tempfile=/tmp/test$$
        trap "rm -f $tempfile" 0 1 2 5 15

        $DIALOG --title "$OS_NAME Installer" --clear \
		--inputbox "\\nEnter backup name:" 6 51 2> $tempfile

        if [ "$?" != "0" ]; then
    	    return
        fi

        dstname=`cat $tempfile`

        mkdir -p /tmp/home
        mount -t jffs2 -o rw,noatime $RW_MTDBLK /tmp/home
        cd /tmp/home
        tar c . | gzip -9 -c >$DATAPATH/$dstname-backup.tgz
        cd /
        umount /tmp/home
}

homerestore() {
	if [ $RW_MTD_SIZE -eq 0 ]; then
	    $DIALOG --title "$OS_NAME Installer" --clear \
    		--msgbox "\\nYou use one root configuration without user partition." 10 52
	
	    return
	fi
        cd $DATAPATH
        DIRL=`ls -1 *-backup.tgz`
        FILELIST=""
        for file in $DIRL
        do
            DATASIZE=`wc -c $file`
            DATASIZE=`echo $DATASIZE | cut -d' ' -f1`
            FILELIST="$FILELIST `echo $file | sed -e '/-backup.tgz/s///'` $DATASIZE"
        done

        ###tempfile=`tempfile 2>/dev/null` || 
	tempfile=/tmp/test$$
        trap "rm -f $tempfile" 0 1 2 5 15
        $DIALOG --clear --title "$OS_NAME Installer" \
		--menu "\\nChoose backup file:" 15 40 7 \
    		$FILELIST 2> $tempfile

        if [ "$?" != "0" ]; then
	    return
	fi

        srcname=`cat $tempfile`

        /tmp1/tools/bin/eraseall -j $RW_MTD 2> /dev/null > /dev/null

        mkdir -p /tmp/home
        mount -t jffs2 -o rw,noatime $RW_MTDBLK /tmp/home
        cd /tmp/home
        gzip -dc $DATAPATH/$srcname-backup.tgz | tar xf -
        cd /
        umount /tmp/home
}

flashresize() {
    cd /tmp
    
    ###tempfile=`tempfile 2>/dev/null` || 
    tempfile=/tmp/test$$
    trap "rm -f $tempfile" 0 1 2 5 15

    DROMS="35";

    case $MODEL in
	SL-C700)
		DROMS=45;
		DROMX=47
		;;
	SL-C750)
		DROMS=45;
		DROMX=47
		;;
	SL-6000)
		DROMS=45;
		DROMX=47;
		;;
	SL-7500)
		DROMS=45;
		DROMX=47;
		;;
	SL-C760)
		DROMS=50;
		DROMX=121
		;;
	SL-C860)
		DROMS=50;
		DROMX=121
		;;
    esac

    $DIALOG --title "$OS_NAME Installer" --clear \
	    --inputbox "\\nEnter new root partition size \\nin MB ($DROMS is recommending, $DROMX is maximal):" 12 80 2> $tempfile

    if [ "$?" != "0" ]; then
	return
    fi

    romsize=`cat $tempfile`

#    if [ $romsize -eq 0]; then
#	$DIALOG --title "Cacko Linux Installer" --clear \
#    		--msgbox "Size must be more that 0\\nPress the [ENTER] for main menu." 10 52
#	return
#    fi

    /tmp1/tools/bin/fsro_resize $romsize

    $DIALOG --title "$OS_NAME Installer" --clear \
    	    --msgbox "\\nRepartition finished.\\nYou will need reflash your ROM after rebooting.\\nPress the [ENTER] for reboot." 10 52
    exit 0
}

writeSysFlash() {
	Start=`printf "%d" $2`
	Count=`expr $3 \* 1024`

	nandlogical /dev/mtd1 WRITE $Start $Count $1
}

fixSharpLoader() {
	writeSysFlash $XPATCH/mainte_fix.bin   0x00000000 320
	$DIALOG --title "$OS_NAME Installer" --clear \
    		--msgbox "\\nSharp loader patched, max size for root partition now is 121MB.\\nYou will need run installer after rebooting.\\nPress the [ENTER] for reboot." 10 52
	exit 0
}

nandmenu() {
while true
do
    ###tempfile=`tempfile 2>/dev/null` || 
    tempfile=/tmp/test$$
    trap "rm -f $tempfile" 0 1 2 5 15
    $DIALOG --clear --title "NAND Flash utils" \
	    --menu "\nMenu:" 15 70 7 \
		"1" "Resize root partition" \
		"2" "Format user partition" \
		"3" "Fix Sharp loader NAND 64MB limit (SL-C760/C860 only)" \
    		"4" "Back to main menu" 2> $tempfile

    retval=$?

    choice=`cat $tempfile`

    case $retval in
      0)
	case $choice in
	    1)
		flashresize
		;;
	    2)
		homeformat
		;;
	    3)
		fixSharpLoader
		;;
	    4)
		return
		;;
	esac
	;;
      1)
	return
	;;
      255)
	return
	;;
    esac
done

}

mainmenu() {
while true
do
    ###tempfile=`tempfile 2>/dev/null` || 
    tempfile=/tmp/test$$
    trap "rm -f $tempfile" 0 1 2 5 15
    $DIALOG --clear --title "$OS_NAME Installer ($MODEL $RO_MTD_SIZE/$RW_MTD_SIZE)" \
	    --menu "\nChoose what do you like:" 15 70 7 \
    		"1" "Install new ROM" \
		"2" "Upgrade previous $OS_NAME (>=1.1.0)" \
		"3" "NAND Flash Utils" \
    		"4" "Run console shell" \
		"5" "$OS_NAME general disclaimer" \
    		"6" "Reboot" 2> $tempfile

    retval=$?

    choice=`cat $tempfile`

    case $retval in
      0)
	case $choice in
	    1)
		break
		;;
	    2)
		$DIALOG --title "Upgrade previous $OS_NAME" --clear \
			--msgbox "Not finished yet..." 20 70
		;;
	    3)
		nandmenu
		;;
	    4)
		clear
		echo "Type 'exit' for close console."
		/bin/sh
		;;
	    5)
		$DIALOG --title "$OS_NAME general disclaimer" --clear \
			--msgbox " The pdaXrom team is not responsible for any loss, damage, or misinformation as a result of the data produced in the pdaXrom.\\n\\n The pdaXrom team disclaims all representations, warranties, conditions and indemnities of any kind, either express of implied or other violation of rights, or those arising out of a course of dealing or usage or transaction as a direct result of using this pdaXrom and or information, data produced in the pdaXrom.\\n\\n The user agrees that any actions arising from use of the pdaXrom will be the sole responsibility of the User and further more the User agrees to waive any loss, damage and any interpretation of loss and damage or misinformation arising from the use of pdaXrom." \
			20 70
		;;
	    6)
		exit 0
		;;
	esac
	;;
      1)
	exit 0
	;;
      255)
	exit 0
	;;
    esac
done
}


badmodel() {
	$DIALOG --title "$OS_NAME Installer" --clear \
    		--msgbox "\\nAarrghh!!! \\nYour Zaurus not SL-C700/750/760/860 model.\
			  \\nCannot install $OS_NAME on $MODEL, press the [ENTER] key for reboot." 10 41
	#/bin/sh
	exit 1
}

trap 'Cleanup 1' 1 15
trap '' 2 3

echo "Installer starting ..."

mkdir -p /tmp1
mount -t tmpfs -o size=10m none /tmp1
TOOLSNAME="$DATAPATH/tools.tar"
if [ ! -f $TOOLSNAME ]; then
    TOOLSNAME="$DATAPATH/TOOLS.TAR"
    if [ ! -f $TOOLSNAME ]; then
	echo "Cannot detect tools package on $DATAPATH"
	sleep 1
	exit 1
    fi
fi

cd /tmp1
tar xf $TOOLSNAME

/sbin/writerominfo
MODEL=`cat /proc/deviceinfo/product`
echo 'MODEL:'$MODEL
case "$MODEL" in
    SL-C700) 
	;;
    SL-C750) 
	;;
    SL-6000) 
	;;
    SL-7500) 
	;;
    SL-C760) 
	;;
    SL-C860) 
	;;
    *)
	badmodel
	;;
esac

$DIALOG --sleep 1 \
	--title "$OS_NAME Installer" \
        --infobox "\\nSharp Zaurus $MODEL detected..." 10 52

while true
do

mainmenu

mkdir -p $TMPPATH > /dev/null 2>&1

cd $DATAPATH/

for TARGETFILE in /tmp1/tools/kernel-$MODEL/zImage.bin initrd.bin INITRD.BIN
do
	if [ -e $TARGETFILE ]
	then
		rm -f $TMPPATH/*.bin > /dev/null 2>&1
		DATASIZE=`wc -c $TARGETFILE`
		DATASIZE=`echo $DATASIZE | cut -d' ' -f1`

		TARGETTYPE=Invalid
		case "$TARGETFILE" in
		/tmp1/tools/kernel-$MODEL/zImage.bin) TARGETTYPE=Kernel;;
		initrd.bin) TARGETTYPE=RoFs;;
		INITRD.BIN) TARGETTYPE=RoFs;;
		*)
			continue
			;;
		esac

		case "$TARGETTYPE" in
		Kernel)
			if [ $WFLG_KERNEL != 0 ]
			then
				continue
			fi
			WFLG_KERNEL=1
			DATANAME="kernel"
			ISLOGICAL=1
			MODULEID=5
			MODULESIZE=0x13C000
			ADDR=`dc 0xE0000`
			ISFORMATTED=1
			DATAPOS=0
			ONESIZE=524288
			HDTOP=`expr $DATASIZE - 16`
			bcut -a $HDTOP -s 16 -o $TMPHEAD $TARGETFILE
			;;
		RoFs)
			if [ $WFLG_INITRD != 0 ]
			then
				continue
			fi
			WFLG_INITRD=1
			DATANAME="RO file system"
			ISLOGICAL=0
			MODULEID=6
			if [ "$MODEL" = "SL-6000" ]; then
			    MODULESIZE=0x1E00000
			else
			    MODULESIZE=0x1900000
			fi
			ADDR=0
			ISFORMATTED=0
			TARGET_MTD=$RO_MTD
			DATAPOS=16
			ONESIZE=1048576
			bcut -s 16 -o $TMPHEAD $TARGETFILE
			;;
		*)
			continue
			;;
		esac

		if [ $ISFORMATTED = 0 ]
		then
			$DIALOG --sleep 1 \
				--title "$OS_NAME Installer" \
    				--infobox "\\n$DATANAME: flash erasing ..." 10 52
			/tmp1/tools/bin/eraseall -j $TARGET_MTD 2> /dev/null > /dev/null
			$DIALOG --sleep 1 \
				--title "$OS_NAME Installer" \
    				--infobox "\\n$DATANAME: flash erasing ... done" 10 52
			ISFORMATTED=1
		fi

		PROGSTEP=`expr $DATASIZE / $ONESIZE + 1`
		PROGSTEP=`expr 1000 / $PROGSTEP`
		if [ $PROGSTEP = 0 ]
		then
			PROGSTEP=1
		fi

		#00 means header information
		VTMPNAME=$TMPPATH'/vtmp'`date '+%s'`'.tmp'
		MTMPNAME=$TMPPATH'/mtmp'`date '+%s'`'.tmp'
		/sbin/nandlogical $LOGOCAL_MTD READ $VERBLOCK 0x4000 $VTMPNAME > /dev/null 2>&1
		/sbin/nandlogical $LOGOCAL_MTD READ $MVRBLOCK 0x4000 $MTMPNAME > /dev/null 2>&1

		#echo 'found header'
		/sbin/verchg -v $VTMPNAME $TMPHEAD $MODULEID $MODULESIZE > /dev/null 2>&1
		/sbin/verchg -m $MTMPNAME $TMPHEAD $MODULEID $MODULESIZE > /dev/null 2>&1

		writeflash | $DIALOG --title "$OS_NAME Installer" --gauge "\\nPreparing $DATANAME flash image..." 20 70 0
		rm -f $TMPPATH/*.bin > /dev/null 2>&1

		if [ ! -f $TMPPATH/error ]
		then
			/sbin/nandlogical $LOGOCAL_MTD WRITE $VERBLOCK 0x4000 $VTMPNAME > /dev/null 2>&1
			/sbin/nandlogical $LOGOCAL_MTD WRITE $MVRBLOCK 0x4000 $MTMPNAME > /dev/null 2>&1

			rm -f $VTMPNAME > /dev/null 2>&1
			rm -f $MTMPNAME > /dev/null 2>&1
			$DIALOG --sleep 1 \
				--title "$OS_NAME Installer" \
    				--infobox "\\n$DATANAME: flashing OK" 10 52
		else
			$DIALOG --title "$OS_NAME Installer" --clear \
    				--msgbox "\\nOups!!! \
    				\\n$DATANAME: error while flashing.\\nPress the [ENTER] key for reboot." 10 52
			exit 3
		fi
	fi
done

if [ $RW_MTD_SIZE -ne 0 ]; then
    $DIALOG --title "$OS_NAME Installer" --clear \
    	    --yesno "\\nCongratulation!!!
		     \\n\\n$OS_NAME installed on your Zaurus $MODEL! \
		     \\nDo you want format internal user flash now?" 15 61

    case $? in
      0)
        homeformat
        ;;
      1)
        ;;
      255)
        ;;
    esac
fi

done

exit 0
