#!/bin/sh
#
# Called from udev
# Attemp to mount any added removable block devices
# and remove any removed devices
#

export PATH=/usr/sbin:/usr/bin:/sbin:/bin:$PATH

ACTION=$1
DEVICE=$2
MEDIA=$3

VOL_ID="/lib/udev/vol_id"

MOUNTDIR=""

[ "$ID_FS_LABEL" ] || ID_FS_LABEL=`$VOL_ID --label $DEVICE`
[ "$ID_FS_UUID" ] || ID_FS_UUID=`$VOL_ID --uuid $DEVICE`
[ "$ID_FS_TYPE" ] || ID_FS_TYPE=`$VOL_ID --type $DEVICE`

if [ "$ID_FS_LABEL" ]; then
    MOUNTDIR="$ID_FS_LABEL"
elif [ "$ID_FS_UUID" ]; then
    MOUNTDIR="$ID_FS_UUID"
fi

echo "$ACTION device $DEVICE [$ID_FS_LABEL] [$ID_FS_UUID] [$ID_FS_TYPE] [$MOUNTDIR] [$DEVPATH] [$MEDIA]" >> /var/log/minimount.log

if [ "$ACTION" = "add" ] && [ "$MOUNTDIR" ]; then
    if [ ! -e /sys${DEVPATH}/device ]; then
	DEVPATH=${DEVPATH}/..
    fi
    if [ ! -e /sys${DEVPATH}/removable ]; then
	exit 0
    fi
    if [ "`cat /sys${DEVPATH}/removable`" = "0" ]; then
	exit 0
    fi
    if [ "x$ID_FS_TYPE" = "x" ]; then
	exit 1
    fi
    modprobe $ID_FS_TYPE || exit 1

    if [ "$MEDIA" = "CD" ]; then
	sysctl -w dev.cdrom.lock=0
    fi

    mkdir "/media/$MOUNTDIR"
    mount $DEVICE "/media/$MOUNTDIR"
fi

if [ "$ACTION" = "remove" ]; then
    DEVICE=`echo "$DEVICE" | sed 's/^\/\//\//'`
    MOUNTDIR=`grep "${DEVICE} " /proc/mounts | awk '{ print $2; }'`
    echo "Trying to unmount [$DEVICE] [$MOUNTDIR]" >> /var/log/minimount.log
    if [ "$MOUNTDIR" ]; then
	umount -l "$MOUNTDIR" && rmdir "$MOUNTDIR"
    fi
fi
