--- vMac-0.1.9.3/Linux/sdl.c-orig	2010-08-14 23:59:41.000000000 +0300
+++ vMac-0.1.9.3/Linux/sdl.c	2010-08-15 11:25:08.720048033 +0300
@@ -63,6 +63,8 @@
 static int vscr_height = 0;
 static int vscr_scale = 1;
 
+static char *vscr_cache = NULL;
+
 int Screen_Init(int argc, char** argv)
 {
     Uint32 sys_flags;
@@ -107,6 +109,10 @@
     thePrefs.FrameRate = 1; 
     printf("Drawing Every %i frames\n", thePrefs.FrameRate);
 
+	int s = macDisplayWidth * macDisplayHeight / 8;
+	vscr_cache = (char *) malloc(s);
+	memset(vscr_cache, 0, s);
+
     return 0;
 }
 
@@ -115,9 +121,8 @@
 {
     int x, y, x2;
     unsigned char *buf;
-    int scanline = 0;
-#define BUFLEN 512
     unsigned short *vscr = (unsigned short *)screen->pixels;
+    unsigned short *cache_ptr = (unsigned short *) vscr_cache;
 
     SDL_Flip(screen);
 
@@ -131,9 +136,14 @@
 		for (s = 0; s < vscr_scale; s++) {
 			unsigned short *cvtbuf = vscr + ((vscr_width - macDisplayWidth * vscr_scale) >> 1) +
 	  							  ((vscr_height - macDisplayHeight * vscr_scale) >> 1) * vscr_width;
-	  		/* Bytesex and inversion */
+	  		unsigned short *cache_ptr1 = cache_ptr;
 	  		for (x = x2 = 0; x2 < 64; x2 += 2) {
 				unsigned short px = (buf[x2] << 8) | buf[x2 + 1];
+				if (cache_ptr1[x2 >> 1] == px) {
+					x += (vscr_scale << 4);
+					continue;
+				} else if (s == (vscr_scale - 1))
+					cache_ptr1[x2 >> 1] = px;
 				int i;
 				for (i = 0; i < 16; i++) {
 					int s;
@@ -145,6 +155,7 @@
 	  		}
 	  		vscr += vscr_width;
 	    }
+	    cache_ptr += macDisplayWidth / 16;
     }
 }
 #else
