--- s/nv.c-	2009-12-14 23:35:50.957071897 +0600
+++ s/nv.c	2009-12-14 23:39:02.806138472 +0600
@@ -593,10 +593,6 @@
      * Set the module owner to ensure that the reference
      * count reflects accesses to the proc files.
      */
-    proc_nvidia->owner = THIS_MODULE;
-    proc_nvidia_cards->owner = THIS_MODULE;
-    proc_nvidia_warnings->owner = THIS_MODULE;
-
     for (j = 0; j < num_nv_devices; j++)
     {
         nvl = &nv_linux_devices[j];
@@ -615,7 +611,6 @@
 
         entry->data = nv;
         entry->read_proc = nv_kern_read_cardinfo;
-        entry->owner = THIS_MODULE;
 
         if (nv_find_pci_capability(dev, PCI_CAP_ID_AGP))
         {
@@ -629,7 +624,6 @@
                 goto failed;
             }
 
-            entry->owner = THIS_MODULE;
             proc_nvidia_agp = entry;
 
             entry = create_proc_entry("status", flags, proc_nvidia_agp);
@@ -640,7 +634,6 @@
 
             entry->data = nv;
             entry->read_proc = nv_kern_read_status;
-            entry->owner = THIS_MODULE;
 
             entry = create_proc_entry("host-bridge", flags, proc_nvidia_agp);
             if (!entry) {
@@ -650,7 +643,6 @@
 
             entry->data = NULL;
             entry->read_proc = nv_kern_read_agpinfo;
-            entry->owner = THIS_MODULE;
 
             entry = create_proc_entry("card", flags, proc_nvidia_agp);
             if (!entry) {
@@ -660,7 +652,6 @@
 
             entry->data = nv;
             entry->read_proc = nv_kern_read_agpinfo;
-            entry->owner = THIS_MODULE;
         }
 
         NV_PCI_DEV_PUT(dev);
@@ -671,14 +662,12 @@
         goto failed;
 
     entry->read_proc = nv_kern_read_version;
-    entry->owner = THIS_MODULE;
 
     entry = create_proc_entry("registry", flags, proc_nvidia);
     if (!entry)
         goto failed;
 
     entry->read_proc = nv_kern_read_registry;
-    entry->owner = THIS_MODULE;
 
     return;
 
@@ -705,7 +694,6 @@
 
     entry->data = (void *)message;
     entry->read_proc = nv_kern_read_warning;
-    entry->owner = THIS_MODULE;
 #endif
 }
 
