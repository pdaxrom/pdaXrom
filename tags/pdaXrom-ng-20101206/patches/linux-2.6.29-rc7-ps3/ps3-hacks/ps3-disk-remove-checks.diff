For debug only.

Sanity checks for ps3disk_remove().

By: Geoff Levand <geoffrey.levand@am.sony.com>
---
 drivers/block/ps3disk.c |   19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

--- a/drivers/block/ps3disk.c
+++ b/drivers/block/ps3disk.c
@@ -213,8 +213,16 @@ static void ps3disk_do_request(struct ps
 
 static void ps3disk_request(struct request_queue *q)
 {
-	struct ps3_storage_device *dev = q->queuedata;
-	struct ps3disk_private *priv = dev->sbd.core.driver_data;
+	struct ps3_storage_device *dev;
+	struct ps3disk_private *priv;
+
+	BUG_ON(!q);
+	BUG_ON(!q->queuedata);
+
+	dev = q->queuedata;
+	BUG_ON(!dev->sbd.core.driver_data);
+
+	priv = dev->sbd.core.driver_data;
 
 	if (priv->req) {
 		dev_dbg(&dev->sbd.core, "%s:%u busy\n", __func__, __LINE__);
@@ -234,6 +242,9 @@ static irqreturn_t ps3disk_interrupt(int
 	unsigned long num_sectors;
 	const char *op;
 
+	BUG_ON(!dev);
+	BUG_ON(!dev->sbd.core.driver_data);
+
 	res = lv1_storage_get_async_status(dev->sbd.dev_id, &tag, &status);
 
 	if (tag != dev->tag)
@@ -544,6 +555,9 @@ static int ps3disk_remove(struct ps3_sys
 	__clear_bit(MINOR(disk_devt(priv->gendisk)) / PS3DISK_MINORS,
 		    &ps3disk_mask);
 	mutex_unlock(&ps3disk_mask_mutex);
+
+	BUG_ON(priv->req || !elv_queue_empty(priv->queue));
+
 	del_gendisk(priv->gendisk);
 	blk_cleanup_queue(priv->queue);
 	put_disk(priv->gendisk);
@@ -551,6 +565,7 @@ static int ps3disk_remove(struct ps3_sys
 	ps3disk_sync_cache(dev);
 	ps3stor_teardown(dev);
 	kfree(dev->bounce_buf);
+	dev->bounce_buf = NULL;
 	kfree(priv);
 	dev->sbd.core.driver_data = NULL;
 	return 0;
