#
# Submitted-By: Sascha Hauer, 2006-03-15
# Committed-By: Sascha Hauer
#
# This patch contains some gpio commands for pxa processors
#
Index: common/cmd_chggpio.c
===================================================================
--- /dev/null
+++ common/cmd_chggpio.c
@@ -0,0 +1,95 @@
+/*
+ * (C) Copyright 2004
+ * Benedikt Spranger, b.spranger@pengutronix.de
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+
+#ifdef CFG_CMD_CHGGPIO
+
+#include <command.h>
+#include <asm/processor.h>
+#include <asm/arch/pxa-regs.h>
+
+int do_chggpio (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+	int gpio, af, lv;
+
+	if ((argc != 2) && (argc != 5))
+	{
+		printf ("usage:\t%s <nr> <AF> <in|out> <0|1>\n\t%s <nr>\n",
+			argv [0], argv [0]);
+		return -1;
+	}
+
+	gpio = simple_strtoul (argv[1], NULL, 0);
+
+	if (gpio < 0 || gpio > 84)
+	{
+		printf ("unknown gpio %d\n", gpio);
+		return -1;
+	}
+
+	if (argc == 2)
+	{
+		printf ("GPIO %02d: AF %1d %s %s\n",
+			gpio, (GAFR (gpio) >> (gpio%16)*2) & 0x3,
+			(GPDR (gpio) & GPIO_bit(gpio)) ? "OUT":"IN",
+			(GPLR (gpio) & GPIO_bit(gpio)) ? "high":"low");
+
+		return 0;
+	}
+
+	af = simple_strtoul (argv[2], NULL, 0);
+
+	if ((af < 0) || (af > 3))
+	{
+		printf ("unknown alternate function #%d\n", af);
+		return 0;
+	}
+
+	GAFR (gpio) &= ~(0x3 << (gpio%16)*2);
+	GAFR (gpio) |= af << (gpio%16)*2;
+
+	lv = simple_strtoul (argv[4], NULL, 0);
+
+	if (lv)
+	    GPSR(gpio) |= GPIO_bit(gpio);
+	else
+	    GPCR(gpio) |= GPIO_bit(gpio);
+
+	if (!strncmp("in", argv [3], 2) || !strncmp("IN", argv [3], 2))
+		GPDR(gpio) &= ~GPIO_bit(gpio);
+	else if (!strncmp("out", argv [3], 3) || !strncmp("OUT", argv [3], 3))
+		GPDR(gpio) |= GPIO_bit(gpio);
+	else
+	    printf ("%s must be \"in\" or \"out\"\n", argv [3]);
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	chggpio,	5,	2,	do_chggpio,
+	"chggpio - chg GPIO <AF> <in|out> <0|1>\n",
+	"hilfe\n"
+);
+
+#endif	/* CFG_CMD_GPIOPXA */
Index: common/cmd_pxagpio.c
===================================================================
--- /dev/null
+++ common/cmd_pxagpio.c
@@ -0,0 +1,79 @@
+/*
+ * (C) Copyright 2004
+ * Benedikt Spranger, b.spranger@pengutronix.de
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+
+#ifdef CFG_CMD_GPIOPXA
+#include <command.h>
+#include <asm/processor.h>
+#include <asm/arch/pxa-regs.h>
+
+int do_pxagpio (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+	int i,j;
+	int gpio, af, dir;
+
+	if (argc != 3)
+	{
+		printf ("usage: %s <gpio> <times>\n", argv [0]);
+		return -1;
+	}
+
+	gpio = simple_strtoul (argv[1], NULL, 0);
+
+	if (gpio < 0 || gpio > 84)
+	{
+		printf ("unknown gpio %d\n", gpio);
+		return -1;
+	}
+
+	dir = GPDR(gpio);
+
+	GPDR(gpio) |= GPIO_bit(gpio);
+
+	for (i = 0; i < simple_strtoul (argv[2], NULL, 16); i++)
+	{
+		GPSR(gpio) |= GPIO_bit(gpio);
+		for(j=0;j<100;j++)
+			udelay(5000);
+		if(ctrlc()) {
+			printf("abort\n");
+			return;
+		}
+		GPCR(gpio) |= GPIO_bit(gpio);
+		for(j=0;j<100;j++)
+			udelay(5000);
+	}
+
+	GPDR(gpio) &= ~GPIO_bit(gpio);
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	pxagpio,	3,	2,	do_pxagpio,
+	"pxagpio - toggle GPIO <n> <x> times\n",
+	"hilfe\n"
+);
+
+#endif	/* CFG_CMD_GPIOPXA */
Index: common/Makefile
===================================================================
--- common/Makefile.orig
+++ common/Makefile
@@ -30,7 +30,7 @@ AOBJS	=
 COBJS	= main.o ACEX1K.o altera.o bedbug.o circbuf.o \
 	  cmd_ace.o cmd_autoscript.o \
 	  cmd_bdinfo.o cmd_bedbug.o cmd_bmp.o cmd_boot.o cmd_bootm.o \
-	  cmd_cache.o cmd_console.o \
+	  cmd_cache.o cmd_chggpio.o cmd_console.o \
 	  cmd_date.o cmd_dcr.o cmd_diag.o cmd_display.o cmd_doc.o cmd_dtt.o \
 	  cmd_eeprom.o cmd_elf.o cmd_ext2.o \
 	  cmd_fat.o cmd_fdc.o cmd_fdos.o cmd_flash.o cmd_fpga.o \
@@ -38,7 +38,7 @@ COBJS	= main.o ACEX1K.o altera.o bedbug.
 	  cmd_load.o cmd_log.o \
 	  cmd_mem.o cmd_mii.o cmd_misc.o cmd_mmc.o \
 	  cmd_nand.o cmd_net.o cmd_nvedit.o \
-	  cmd_pci.o cmd_pcmcia.o cmd_portio.o \
+	  cmd_pxagpio.o cmd_pci.o cmd_pcmcia.o cmd_portio.o \
 	  cmd_reginfo.o cmd_reiser.o cmd_scsi.o cmd_spi.o cmd_universe.o \
 	  cmd_updater.o \
 	  cmd_usb.o cmd_vfd.o \
