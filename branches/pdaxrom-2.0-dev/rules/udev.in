menuconfig UDEV
	bool
	prompt "udev                "
	select ROOTFS_DEV
	help
	  udev provides a dynamic device directory containing only
	  the files for actually present devices. It creates or
	  removes device node files in the /dev directory, or it
	  renames network interfaces.

	  Usually udev runs as udevd(8) and receives uevents directly
	  from the kernel if a device is added or removed from the system.

	  If udev receives a device event, it matches its configured
	  rules against the available device attributes provided in
	  sysfs to identify the device. Rules that match, may provide
	  additional device information or specify a device node name
	  and multiple symlink names and instruct udev to run
	  additional programs as part of the device event handling.

	  Ensure: This udev implementation requires at least kernel
	  2.6.15 and must have sysfs, unix domain sockets and networking
	  enabled.

comment "build options  ---"
	depends on UDEV

config UDEV_ENABLE_SYSLOG
	bool "Enable syslog"
	depends on UDEV
	help
	  If enabled, udev is able to pass errors or debug information
	  to syslog. This is very useful to see what udev is doing or not doing.
	  Note: To use this feature the syslog daemon must start before udev

config UDEV_ENABLE_DEBUG
	bool "Enable debugging messages"
	depends on UDEV
	help
	  If enabled, very verbose debugging messages will be compiled
	  into the udev binaries. The actual level of debugging is specified
	  in the udev config file (refer entry "udev_log")

comment "install options  ---"
	depends on UDEV

config UDEV_UDEVD
	bool "udevd"
	depends on UDEV
	default y
	help
	  udevd listens to kernel uevents and passes the incoming
	  events to udev. It ensures the right event order and
	  takes care, that events for child devices are delayed
	  until the parent has finished the device handling.

config UDEV_UDEVADM
	bool "udevadm"
	depends on UDEV
	help
	  Lets you control the currently running udev system

config UDEV_FW_HELPER
	bool "firmware helper"
	depends on UDEV
	help
	  This is a small helper script to load some kind of firmware on demand

config UDEV_USB_ID
	bool "USB device id generator"
	depends on UDEV
	help
	  This is a helper to generate unique information about some kind of
	  USB device. This is required to ensure the same hotplugged device to
	  appear always at the same device node (via link)

comment "runtime options  ---"
	depends on UDEV

config ROOTFS_ETC_UDEV_CONF
	depends on UDEV
	bool
	default y
	prompt "Install udev.conf"
	help
	  Installs /etc/udev/udev.conf from a selectable source

	choice
		prompt "Kind of udev.conf"
		default ROOTFS_ETC_UDEV_CONF_DEFAULT
		depends on ROOTFS_ETC_UDEV_CONF

		config ROOTFS_ETC_UDEV_CONF_DEFAULT
			bool
			prompt "Use generic"
			help
			  Installs a generic /etc/udev/udev.conf file.
			  See <ptxdist-install>/generic/etc/udev/udev.conf

		config ROOTFS_ETC_UDEV_CONF_USER
			bool
			prompt "User defined"
			help
			  This uses a user defined udev.conf file. PTXdist
			  uses file projectroot/etc/udev/udev.conf in your
			  local project.
			  Note: If you locate the *.rules path to another
			  location than /etc/udev/rules.d, you must install any
			  udev rules by your own.

	endchoice

config ROOTFS_ETC_UDEV_DEFAULT_RULES
	bool
	depends on UDEV
	prompt "Install default udev rules"
	help
	  This will install the generic udev rules file under
	  /etc/udev/rules.d/udev.rules. Currently this file
	  is very basic.

config ROOTFS_ETC_UDEV_USER_RULES
	bool
	depends on UDEV
	prompt "Install user defined rules"
	help
	  This will install all user defined udev *.rules files from the active
	  project. PTXdist expects the files in projectroot/etc/udev/rules.d
	  and will install them into /etc/udev/rules.d on the target.
	  Note: PTXdist only comes with very basic generic udev rules. All devices
	  are owned by root only. If you need special permission control you must
	  add some udev rules to create device nodes with correct permissions.
	  There are some rule files in the udev packet. Refer
	  "build-target/udev-???/etc/udev/rules.d" to check if they meet your
	  requirements.

config ROOTFS_ETC_INITD_UDEV
	depends on UDEV
	bool
	default y
	prompt "Install startup script      "
	help
	  The /etc/init.d/udev script lets you control the udevd daemon.

	choice
		prompt "Kind of startup script"
		default ROOTFS_ETC_INITD_UDEV_DEFAULT
		depends on ROOTFS_ETC_INITD_UDEV && UDEV

		config ROOTFS_ETC_INITD_UDEV_DEFAULT
			bool
			prompt "Use generic"
		#
		# these commands are required by the generic start script
		#
			select UDEV_UDEVD
			help
			  Installs a generic /etc/init.d/udev startup script.
			  See <ptxdist-install>/generic/etc/init.d/udev

		config ROOTFS_ETC_INITD_UDEV_USER
			bool
			prompt "User defined"
			help
			  This uses a user defined udev startup script. PTXdist
			  uses files projectroot/etc/init.d/udev in your local
			  project

	endchoice
