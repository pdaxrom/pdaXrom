
  To fix the following compile error by changing local_irq_restore()
to raw_local_irq_restore().

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
include/asm-powerpc/hw_irq.h
In file included from include/asm/system.h:9,
		 from include/linux/list.h:9,
		 from include/linux/signal.h:8,
		 from arch/powerpc/kernel/asm-offsets.c:16:
include/asm/hw_irq.h: In function 'local_get_flags':
include/asm/hw_irq.h:23: error: expected expression before '<<' token
include/asm/hw_irq.h:24: error: expected expression before '<<' token
include/asm/hw_irq.h:25: error: expected expression before ':' token
include/asm/hw_irq.h:25: error: expected statement before ')' token
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Signed-off-by: Tsutomu Owa <tsutomu.owa@toshiba.co.jp>
-- owa

---
 arch/powerpc/kernel/head_64.S   |    2 +-
 arch/powerpc/kernel/irq.c       |    2 +-
 arch/powerpc/kernel/ppc_ksyms.c |    2 +-
 include/asm-powerpc/hw_irq.h    |   18 ++++++++----------
 4 files changed, 11 insertions(+), 13 deletions(-)

Index: linux-2.6.23.1-rt5/arch/powerpc/kernel/head_64.S
===================================================================
--- linux-2.6.23.1-rt5.orig/arch/powerpc/kernel/head_64.S
+++ linux-2.6.23.1-rt5/arch/powerpc/kernel/head_64.S
@@ -1392,7 +1392,7 @@ END_FW_FTR_SECTION_IFCLR(FW_FEATURE_ISER
 	 * handles any interrupts pending at this point.
 	 */
 	ld	r3,SOFTE(r1)
-	bl	.local_irq_restore
+	bl	.raw_local_irq_restore
 	b	11f
 
 /* Here we have a page fault that hash_page can't handle. */
Index: linux-2.6.23.1-rt5/arch/powerpc/kernel/irq.c
===================================================================
--- linux-2.6.23.1-rt5.orig/arch/powerpc/kernel/irq.c
+++ linux-2.6.23.1-rt5/arch/powerpc/kernel/irq.c
@@ -111,7 +111,7 @@ static inline void set_soft_enabled(unsi
 	: : "r" (enable), "i" (offsetof(struct paca_struct, soft_enabled)));
 }
 
-void notrace local_irq_restore(unsigned long en)
+void notrace raw_local_irq_restore(unsigned long en)
 {
 	/*
 	 * get_paca()->soft_enabled = en;
Index: linux-2.6.23.1-rt5/arch/powerpc/kernel/ppc_ksyms.c
===================================================================
--- linux-2.6.23.1-rt5.orig/arch/powerpc/kernel/ppc_ksyms.c
+++ linux-2.6.23.1-rt5/arch/powerpc/kernel/ppc_ksyms.c
@@ -49,7 +49,7 @@
 #endif
 
 #ifdef CONFIG_PPC64
-EXPORT_SYMBOL(local_irq_restore);
+EXPORT_SYMBOL(raw_local_irq_restore);
 #endif
 
 #ifdef CONFIG_PPC32
Index: linux-2.6.23.1-rt5/include/asm-powerpc/hw_irq.h
===================================================================
--- linux-2.6.23.1-rt5.orig/include/asm-powerpc/hw_irq.h
+++ linux-2.6.23.1-rt5/include/asm-powerpc/hw_irq.h
@@ -16,18 +16,18 @@ extern void timer_interrupt(struct pt_re
 #ifdef CONFIG_PPC64
 #include <asm/paca.h>
 
-static inline unsigned long local_get_flags(void)
+static inline unsigned long raw_local_get_flags(void)
 {
 	unsigned long flags;
 
-<<<<<<< delete extern unsigned long local_get_flags(void);
-<<<<<<< delete extern unsigned long local_irq_disable(void);
+	__asm__ __volatile__("lbz %0,%1(13)"
+	: "=r" (flags)
 	: "i" (offsetof(struct paca_struct, soft_enabled)));
 
 	return flags;
 }
 
-static inline unsigned long local_irq_disable(void)
+static inline unsigned long raw_local_irq_disable(void)
 {
 	unsigned long flags, zero;
 
@@ -53,8 +53,8 @@ extern void raw_local_irq_restore(unsign
 #define raw_irqs_disabled_flags(flags)	((flags) == 0)
 
 
-#define __hard_irq_enable()	__mtmsrd(mfmsr() | MSR_EE, 1)
-#define __hard_irq_disable()	__mtmsrd(mfmsr() & ~MSR_EE, 1)
+#define __hard_irq_enable()		__mtmsrd(mfmsr() | MSR_EE, 1)
+#define __hard_irq_disable()		__mtmsrd(mfmsr() & ~MSR_EE, 1)
 
 #define  hard_irq_disable()			\
 	do {					\
@@ -63,17 +63,15 @@ extern void raw_local_irq_restore(unsign
 		get_paca()->hard_enabled = 0;	\
 	} while(0)
 
-#else
+#else  /* CONFIG_PPC64 */
 
 #if defined(CONFIG_BOOKE)
 #define SET_MSR_EE(x)	mtmsr(x)
 #define raw_local_irq_restore(flags)	__asm__ __volatile__("wrtee %0" : : "r" (flags) : "memory")
-<<<<<<< delete #define local_irq_restore(flags) do { \
-#define raw_local_irq_restore(flags) do { \
 #else
 #define SET_MSR_EE(x)	mtmsr(x)
 #define raw_local_irq_restore(flags)	mtmsr(flags)
-#endif
+#endif /* CONFIG_BOOKE */
 
 static inline void raw_local_irq_disable(void)
 {
