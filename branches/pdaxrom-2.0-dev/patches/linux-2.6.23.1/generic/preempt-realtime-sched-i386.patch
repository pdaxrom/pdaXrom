---
 arch/i386/kernel/entry.S   |   14 +++++++++-----
 arch/i386/kernel/process.c |    4 +++-
 2 files changed, 12 insertions(+), 6 deletions(-)

Index: linux-2.6.23.1-rt5/arch/i386/kernel/entry.S
===================================================================
--- linux-2.6.23.1-rt5.orig/arch/i386/kernel/entry.S
+++ linux-2.6.23.1-rt5/arch/i386/kernel/entry.S
@@ -264,14 +264,18 @@ END(ret_from_exception)
 #ifdef CONFIG_PREEMPT
 ENTRY(resume_kernel)
 	DISABLE_INTERRUPTS(CLBR_ANY)
+	cmpl $0, kernel_preemption
+	jz restore_nocheck
 	cmpl $0,TI_preempt_count(%ebp)	# non-zero preempt_count ?
 	jnz restore_nocheck
 need_resched:
 	movl TI_flags(%ebp), %ecx	# need_resched set ?
 	testb $_TIF_NEED_RESCHED, %cl
-	jz restore_all
+	jz restore_nocheck
 	testl $IF_MASK,PT_EFLAGS(%esp)	# interrupts off (exception path) ?
-	jz restore_all
+	jz restore_nocheck
+	DISABLE_INTERRUPTS(CLBR_ANY)
+
 	call preempt_schedule_irq
 	jmp need_resched
 END(resume_kernel)
@@ -481,11 +485,11 @@ work_pending:
 	testl $(_TIF_NEED_RESCHED|_TIF_NEED_RESCHED_DELAYED), %ecx
 	jz work_notifysig
 work_resched:
-	call schedule
-	DISABLE_INTERRUPTS(CLBR_ANY)	# make sure we don't miss an interrupt
+	DISABLE_INTERRUPTS(CLBR_ANY)
+	call __schedule
+					# make sure we don't miss an interrupt
 					# setting need_resched or sigpending
 					# between sampling and the iret
-	TRACE_IRQS_OFF
 	movl TI_flags(%ebp), %ecx
 	andl $_TIF_WORK_MASK, %ecx	# is there any work to be done other
 					# than syscall tracing?
Index: linux-2.6.23.1-rt5/arch/i386/kernel/process.c
===================================================================
--- linux-2.6.23.1-rt5.orig/arch/i386/kernel/process.c
+++ linux-2.6.23.1-rt5/arch/i386/kernel/process.c
@@ -200,12 +200,14 @@ void cpu_idle(void)
 			__get_cpu_var(irq_stat).idle_timestamp = jiffies;
 			idle();
 		}
+		local_irq_disable();
 		trace_preempt_exit_idle();
 		tick_nohz_restart_sched_tick();
 		__preempt_enable_no_resched();
-		schedule();
+		__schedule();
 		preempt_disable();
 		trace_preempt_enter_idle();
+		local_irq_enable();
 	}
 }
 
