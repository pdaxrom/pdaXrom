---
 arch/i386/kernel/process.c   |    2 ++
 arch/x86_64/kernel/process.c |    7 +++++--
 include/linux/irqflags.h     |    9 +++++++++
 kernel/latency_trace.c       |   17 ++++++++++++++++-
 4 files changed, 32 insertions(+), 3 deletions(-)

Index: linux-2.6.23.1-rt5/arch/i386/kernel/process.c
===================================================================
--- linux-2.6.23.1-rt5.orig/arch/i386/kernel/process.c
+++ linux-2.6.23.1-rt5/arch/i386/kernel/process.c
@@ -199,10 +199,12 @@ void cpu_idle(void)
 			__get_cpu_var(irq_stat).idle_timestamp = jiffies;
 			idle();
 		}
+		trace_preempt_exit_idle();
 		tick_nohz_restart_sched_tick();
 		preempt_enable_no_resched();
 		schedule();
 		preempt_disable();
+		trace_preempt_enter_idle();
 	}
 }
 
Index: linux-2.6.23.1-rt5/arch/x86_64/kernel/process.c
===================================================================
--- linux-2.6.23.1-rt5.orig/arch/x86_64/kernel/process.c
+++ linux-2.6.23.1-rt5/arch/x86_64/kernel/process.c
@@ -231,10 +231,12 @@ void cpu_idle (void)
 			__exit_idle();
 		}
 
+		trace_preempt_exit_idle();
 		tick_nohz_restart_sched_tick();
 		preempt_enable_no_resched();
 		schedule();
 		preempt_disable();
+		trace_preempt_enter_idle();
 	}
 }
 
@@ -264,9 +266,10 @@ static void mwait_idle(void)
 	if (!need_resched()) {
 		__monitor((void *)&current_thread_info()->flags, 0, 0);
 		smp_mb();
-		if (!need_resched())
+		if (!need_resched()) {
+			trace_hardirqs_on();
 			__sti_mwait(0, 0);
-		else
+		} else
 			local_irq_enable();
 	} else {
 		local_irq_enable();
Index: linux-2.6.23.1-rt5/include/linux/irqflags.h
===================================================================
--- linux-2.6.23.1-rt5.orig/include/linux/irqflags.h
+++ linux-2.6.23.1-rt5/include/linux/irqflags.h
@@ -16,6 +16,13 @@
   extern void trace_hardirqs_off(void);
   extern void trace_softirqs_on(unsigned long ip);
   extern void trace_softirqs_off(unsigned long ip);
+# ifdef CONFIG_CRITICAL_PREEMPT_TIMING
+   extern void trace_preempt_enter_idle(void);
+   extern void trace_preempt_exit_idle(void);
+# else
+#  define trace_preempt_enter_idle()	do { } while (0)
+#  define trace_preempt_exit_idle()	do { } while (0)
+# endif
 # define trace_hardirq_context(p)	((p)->hardirq_context)
 # define trace_softirq_context(p)	((p)->softirq_context)
 # define trace_hardirqs_enabled(p)	((p)->hardirqs_enabled)
@@ -26,6 +33,8 @@
 # define trace_softirq_exit()	do { current->softirq_context--; } while (0)
 # define INIT_TRACE_IRQFLAGS	.softirqs_enabled = 1,
 #else
+# define trace_preempt_enter_idle()	do { } while (0)
+# define trace_preempt_exit_idle()	do { } while (0)
 # define trace_hardirqs_on()		do { } while (0)
 # define trace_hardirqs_off()		do { } while (0)
 # define trace_softirqs_on(ip)		do { } while (0)
Index: linux-2.6.23.1-rt5/kernel/latency_trace.c
===================================================================
--- linux-2.6.23.1-rt5.orig/kernel/latency_trace.c
+++ linux-2.6.23.1-rt5/kernel/latency_trace.c
@@ -91,7 +91,8 @@ static inline int DEBUG_WARN_ON(int cond
 
 #ifdef CONFIG_CRITICAL_IRQSOFF_TIMING
 # ifdef CONFIG_CRITICAL_PREEMPT_TIMING
-#  define irqs_off_preempt_count() preempt_count()
+   static DEFINE_PER_CPU(int, trace_cpu_idle);
+#  define irqs_off_preempt_count() (!__get_cpu_var(trace_cpu_idle) && preempt_count())
 # else
 #  define irqs_off_preempt_count() 0
 # endif
@@ -2151,6 +2152,20 @@ void notrace unmask_preempt_count(unsign
 }
 EXPORT_SYMBOL(unmask_preempt_count);
 
+#ifdef CONFIG_CRITICAL_PREEMPT_TIMING
+
+/* Some archs do their cpu_idle with preemption on. Don't measure it */
+void notrace trace_preempt_enter_idle(void)
+{
+	__get_cpu_var(trace_cpu_idle) = 1;
+}
+
+void notrace trace_preempt_exit_idle(void)
+{
+	__get_cpu_var(trace_cpu_idle) = 0;
+}
+
+#endif /* CONFIG_CRITICAL_PREEMPT_TIMING */
 
 #endif
 
