---
 drivers/oprofile/oprofilefs.c  |    2 +-
 drivers/pci/access.c           |    2 +-
 drivers/video/console/vgacon.c |    2 +-
 include/linux/kprobes.h        |    2 +-
 include/linux/oprofile.h       |    2 +-
 include/linux/percpu_counter.h |    2 +-
 kernel/kprobes.c               |    2 +-
 kernel/softlockup.c            |    2 +-
 8 files changed, 8 insertions(+), 8 deletions(-)

Index: linux-2.6.23.1-rt5/drivers/oprofile/oprofilefs.c
===================================================================
--- linux-2.6.23.1-rt5.orig/drivers/oprofile/oprofilefs.c
+++ linux-2.6.23.1-rt5/drivers/oprofile/oprofilefs.c
@@ -21,7 +21,7 @@
 
 #define OPROFILEFS_MAGIC 0x6f70726f
 
-DEFINE_SPINLOCK(oprofilefs_lock);
+DEFINE_RAW_SPINLOCK(oprofilefs_lock);
 
 static struct inode * oprofilefs_get_inode(struct super_block * sb, int mode)
 {
Index: linux-2.6.23.1-rt5/drivers/pci/access.c
===================================================================
--- linux-2.6.23.1-rt5.orig/drivers/pci/access.c
+++ linux-2.6.23.1-rt5/drivers/pci/access.c
@@ -11,7 +11,7 @@
  * configuration space.
  */
 
-static DEFINE_SPINLOCK(pci_lock);
+static DEFINE_RAW_SPINLOCK(pci_lock);
 
 /*
  *  Wrappers for all PCI configuration access functions.  They just check
Index: linux-2.6.23.1-rt5/drivers/video/console/vgacon.c
===================================================================
--- linux-2.6.23.1-rt5.orig/drivers/video/console/vgacon.c
+++ linux-2.6.23.1-rt5/drivers/video/console/vgacon.c
@@ -51,7 +51,7 @@
 #include <video/vga.h>
 #include <asm/io.h>
 
-static DEFINE_SPINLOCK(vga_lock);
+static DEFINE_RAW_SPINLOCK(vga_lock);
 static int cursor_size_lastfrom;
 static int cursor_size_lastto;
 static u32 vgacon_xres;
Index: linux-2.6.23.1-rt5/include/linux/kprobes.h
===================================================================
--- linux-2.6.23.1-rt5.orig/include/linux/kprobes.h
+++ linux-2.6.23.1-rt5/include/linux/kprobes.h
@@ -176,7 +176,7 @@ static inline void kretprobe_assert(stru
 	}
 }
 
-extern spinlock_t kretprobe_lock;
+extern raw_spinlock_t kretprobe_lock;
 extern struct mutex kprobe_mutex;
 extern int arch_prepare_kprobe(struct kprobe *p);
 extern void arch_arm_kprobe(struct kprobe *p);
Index: linux-2.6.23.1-rt5/include/linux/oprofile.h
===================================================================
--- linux-2.6.23.1-rt5.orig/include/linux/oprofile.h
+++ linux-2.6.23.1-rt5/include/linux/oprofile.h
@@ -159,6 +159,6 @@ ssize_t oprofilefs_ulong_to_user(unsigne
 int oprofilefs_ulong_from_user(unsigned long * val, char const __user * buf, size_t count);
 
 /** lock for read/write safety */
-extern spinlock_t oprofilefs_lock;
+extern raw_spinlock_t oprofilefs_lock;
  
 #endif /* OPROFILE_H */
Index: linux-2.6.23.1-rt5/include/linux/percpu_counter.h
===================================================================
--- linux-2.6.23.1-rt5.orig/include/linux/percpu_counter.h
+++ linux-2.6.23.1-rt5/include/linux/percpu_counter.h
@@ -16,7 +16,7 @@
 #ifdef CONFIG_SMP
 
 struct percpu_counter {
-	spinlock_t lock;
+	raw_spinlock_t lock;
 	s64 count;
 #ifdef CONFIG_HOTPLUG_CPU
 	struct list_head list;	/* All percpu_counters are on a list */
Index: linux-2.6.23.1-rt5/kernel/kprobes.c
===================================================================
--- linux-2.6.23.1-rt5.orig/kernel/kprobes.c
+++ linux-2.6.23.1-rt5/kernel/kprobes.c
@@ -70,7 +70,7 @@ static atomic_t kprobe_count;
 static bool kprobe_enabled;
 
 DEFINE_MUTEX(kprobe_mutex);		/* Protects kprobe_table */
-DEFINE_SPINLOCK(kretprobe_lock);	/* Protects kretprobe_inst_table */
+DEFINE_RAW_SPINLOCK(kretprobe_lock);	/* Protects kretprobe_inst_table */
 static DEFINE_PER_CPU(struct kprobe *, kprobe_instance) = NULL;
 
 static struct notifier_block kprobe_page_fault_nb = {
Index: linux-2.6.23.1-rt5/kernel/softlockup.c
===================================================================
--- linux-2.6.23.1-rt5.orig/kernel/softlockup.c
+++ linux-2.6.23.1-rt5/kernel/softlockup.c
@@ -15,7 +15,7 @@
 #include <linux/notifier.h>
 #include <linux/module.h>
 
-static DEFINE_SPINLOCK(print_lock);
+static DEFINE_RAW_SPINLOCK(print_lock);
 
 static DEFINE_PER_CPU(unsigned long, touch_timestamp);
 static DEFINE_PER_CPU(unsigned long, print_timestamp);
