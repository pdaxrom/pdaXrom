Subject: [PATCH 1/1] Socket-CAN: HACK around -ENOBUFS when sending packages as fast as possible
From: Marc Kleine-Budde <mkl@pengutronix.de>

This patch changes the skb allocation from the generic alloc_skb, to a
sock_alloc_send_skb. Somehow it is possible to work around -ENOBUFS
this way, because this call blocks if the per socket buffer is
empty. This magically works if you set the txqueuelen of the device to a
decent high value.

Ported from PTX-flavour socket-can.

Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

---
 net/can/raw.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: linux-2.6.23-rc9/net/can/raw.c
===================================================================
--- linux-2.6.23-rc9.orig/net/can/raw.c
+++ linux-2.6.23-rc9/net/can/raw.c
@@ -639,10 +639,10 @@ static int raw_sendmsg(struct kiocb *ioc
 		return -ENXIO;
 	}
 
-	skb = alloc_skb(size, GFP_KERNEL);
+	skb = sock_alloc_send_skb(sk, size, msg->msg_flags & MSG_DONTWAIT, &err);
 	if (!skb) {
 		dev_put(dev);
-		return -ENOMEM;
+		return err;
 	}
 
 	err = memcpy_fromiovec(skb_put(skb, size), msg->msg_iov, size);
